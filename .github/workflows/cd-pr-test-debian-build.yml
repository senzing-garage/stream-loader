name: Pull Request Test Stream Loader Build on Debian

on:
  pull_request:
    branches:
      - main

jobs:
  buildStreamLoader:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Print Environment Variables
        run: printenv
      - name: Git Merge With main
        id: git_conditional_merge
        run: git merge origin/main
      - name: Docker build Stream Loader
        id: build_stream_loader
        run: |
          make \
            BASE_IMAGE="senzing/senzing-base:1.5.2" \
            docker-build
  logPrStreamLoader:
    needs: buildStreamLoader
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Set Variables With Build Info
        id: job_info
        run: |
          curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o job_info.json https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${{ github.run_id }}/jobs
          echo ::set-output name=log_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .url')
          echo ::set-output name=html_url::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .html_url')
          echo ::set-output name=status::$(cat job_info.json | jq --raw-output '.jobs | .[0] | .conclusion')
          echo ::set-output name=branch_name::$(echo ${GITHUB_REF##*/})
      - name: Generate log file
        run: curl -v -L -u runner:${{ secrets.GITHUB_TOKEN }} -o build_logs.txt ${{ steps.job_info.outputs.log_url }}/logs
      - name: Slack Notification
        id: slack_notification
        uses: senzing-factory/git-action-slack-notification@1.0.0
        if: contains(steps.job_info.outputs.status, 'failure')
        env:
          SLACK_CHANNEL: production-build-failures
          SLACK_COLOR: '#3278BD'
          SLACK_TITLE: Stream Loader failed to build on commit sha ${{ github.sha }}
          SLACK_MESSAGE: |
            OS: senzing/senzing-base:1.4.0
            Branch Name: ${{ steps.job_info.outputs.branch_name }}
            The commit SHA is: ${{ github.sha }}
            Git Actions Log URL: ${{ steps.job_info.outputs.html_url }}
          SLACK_USERNAME: stream-loader
          SLACK_WEBHOOK: ${{ secrets.SLACK_NOTIFICATION }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_ACTION: ${{ github.action }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
      - name: Persisting log
        id: persisting_log
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: workflow_log
          path: build_logs.txt
